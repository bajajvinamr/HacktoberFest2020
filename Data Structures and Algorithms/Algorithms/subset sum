// dynamic programming finding subset.
#include<bits/stdc++.h>
using namespace std;
bool isSubsetSum(int arr[],int n,int sum)
{
    bool subset[n+1][sum+1];

    for(int i=0;i<n+1;i++)
    {
        for(int j=0;j<sum+1;j++)
        {
            if(i==0)
            subset[i][j]=false;
            if(j==0)
            subset[i][j]=true;
        }
    }
    for(int i=1;i<n+1;i++){
        for(int j=1;j<sum+1;j++){
            if(arr[i-1]<=j){
                subset[i][j]=subset[i-1][j-arr[i-1]]||subset[i-1][j];
            }
            else
            subset[i][j]=subset[i-1][j];
        }
    }
    return subset[n][sum];
}
int main()
{
    int arr[]={3,34,4,12,5,2};
    int sum=9;
    int n=sizeof(arr)/sizeof(arr[0]);
    if(isSubsetSum(arr,n,sum)==true)
    cout<<"YES"<<endl;
    else
    cout<<"NO";
}
